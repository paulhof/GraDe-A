#GraDe-A INSTALL FILE
#GraDe-A is released under GPLv3, for license details see LICENSE.txt

Installation:
This software uses CMake for Makefile-generation.
This software depends on C++11, OpenMP, armadillo, lapack and blas.
The installation procedure should generate an executable file in ./build/.

One can specify a custom build-type by attaching -DCMAKE_BUILD_TYPE=build_type to the cmake-command. 
E.g. for a Debug build:
-DCMAKE_BUILD_TYPE=Debug

Under Linux:
lapack and blas libraries need to be installed.
cd ./build/
cmake ..
make

If armadillo is not installed, download from http://arma.sourceforge.net/download.html and extract files into ./armadillo/.
Inside this directory do:
cmake .
make

Then try building GraDe-A again.

Under Windows:
The software has been tested under both MSYS with TDM-GCC-64 and Cygwin32.
Prebuilt lapack and blas libraries must be avaiable in ./lib/.
No support for Visual Studio compilers.

After installation copy the dependent .dll files from ./lib/ in the same folder where the executable is used.

MSYS:
Install CMake for Windows and make it available under the PATH variable.
Make sure a C++ compiler with OpenMP-support is available under MSYS (e.g. TDM-GCC-64).

Download armadillo from  http://arma.sourceforge.net/download.html and extract files into ./armadillo/.
64bit: Copy blas_win64_MT.dll and lapack_win64_MT.dll files from ./armadillo/examples/lib_win64/ into ./lib/
32bit: Download 32bit liblapack.dll and libblas.dll from https://icl.cs.utk.edu/lapack-for-windows/lapack/ (Mingw section) into ./lib/

Inside ./armadillo/ do:
cmake . -G"MSYS Makefiles"
make

From GraDe-A root do:
cd ./build/
cmake .. -G"MSYS Makefiles"
make

Cygwin32:
Install Cygwin32 with CMake and OpenMP-support.
Download 32bit liblapack.dll and libblas.dll from https://icl.cs.utk.edu/lapack-for-windows/lapack/ (Mingw section) into ./lib/
Download armadillo from  http://arma.sourceforge.net/download.html and extract files into ./armadillo/.
Inside this directory do:
cmake .
make

From GraDe-A root do:
cd ./build/
cmake ..
make